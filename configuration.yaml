# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

homeassistant:
  packages:
    mqtt_sensors: !include mqtt_sensors.yaml
    unavailable_entities: !include unavailable_entities.yaml
    tesla: !include tesla.yaml
    movie_night: !include movie_night.yaml

# Debugging
logger:
  default: warning
  filters:
    # Netgear: Warning given when auth cookie expires (every 30 min), re-login successful
    pynetgear:
      - "Unauthorized response, let's login and retry...$"
    # Unable to prevent an empty string from being logged, so filtering it out
    homeassistant.components.system_log.external:
      - "Unavailable entities:$"

system_log:
  fire_event: true

# Customized left navigation
panel_custom:
  - name: ha_server_con
    sidebar_title: "Server Controls"
    sidebar_icon: mdi:server
    js_url: /api/hassio/app/entrypoint.js
    url_path: "config/server_control"
    embed_iframe: true
    require_admin: true
    config:
      ingress: core_configurator
  - name: ha_integ
    sidebar_title: Integrations
    sidebar_icon: mdi:devices
    js_url: /api/hassio/app/entrypoint.js
    url_path: "config/integrations"
    embed_iframe: true
    require_admin: true
    config:
      ingress: core_configurator
  - name: ha_auto
    sidebar_title: Automations
    sidebar_icon: mdi:robot
    js_url: /api/hassio/app/entrypoint.js
    url_path: "config/automation"
    embed_iframe: true
    require_admin: true
    config:
      ingress: core_configurator
  - name: ha_addon
    sidebar_title: Add-ons
    sidebar_icon: mdi:home-assistant
    js_url: /api/hassio/app/entrypoint.js
    url_path: "hassio/dashboard"
    embed_iframe: true
    require_admin: true

# Setup input variables for all entitites
input_text: !include input_text.yaml
timer: !include timer.yaml
input_boolean:
  guestroom_in_use:
    name: "Guestroom In Use"
  dining_room_in_use:
    name: "Dining Room In Use"
  movie_night:
    name: "Movie Night"
  null_boolean:
    name: "Null Boolean"
input_number:
  office_motion_count:
    name: "Office Motion Count"
    initial: 0
    min: 0
    max: 10
  parents_home:
    name: "Count of Parents at Home"
    initial: 0
    min: 0
    max: 2
  null_number:
    name: "Null Number"
    initial: 0
    min: 0
    max: 10

# Add support for templating in lovelace
lovelace_gen:
lovelace:
  mode: yaml
  resources:
    - url: /hacsfiles/home-assistant-sun-card/home-assistant-sun-card.js
      type: module
    - url: /hacsfiles/lovelace-auto-entities/auto-entities.js
      type: module
    - url: /hacsfiles/lovelace-card-templater/lovelace-card-templater.js
      type: module
    - url: /hacsfiles/ha-floorplan/floorplan.js
      type: module
    - url: /hacsfiles/mini-graph-card/mini-graph-card-bundle.js
      type: module
    - url: /hacsfiles/lovelace-multiple-entity-row/multiple-entity-row.js
      type: module
    - url: /hacsfiles/lovelace-template-entity-row/template-entity-row.js
      type: module
    - url: /hacsfiles/timer-bar-card/timer-bar-card.js
      type: module

# Envisalink Alarm Panel
envisalink: !include envisalink.yaml

# Alexa integration with Philips Hue emulated bridge
# Used by several packages (e.g., tesla, movie_night)
emulated_hue:
  listen_port: 80
  expose_by_default: false

sensor:
  # Format sensor for lovelace
  - platform: template
    sensors:
      count_in_bed:
        friendly_name: "Count in Bed"
        value_template: > 
          {% set matt = 0 %}
          {% set julie = 0 %}
          {% if states('binary_sensor.matt_in_bed') == "on" %}
            {% set matt = 1 %}
          {% endif %}
          {% if states('binary_sensor.julie_in_bed') == "on" %}
            {% set julie = 1 %}
          {% endif %}
          {{ matt + julie }} 
      dryer_temp_rising:
        friendly_name: "Dryer Temperature Rising"
        value_template: >
          {% set value = 0 %}
          {% if states('binary_sensor.dryer_temp_rising') == "on" %}
            {% set value = 1 %}
          {% endif %}
          {{ value }}
      dryer_temp_falling:
        friendly_name: "Dryer Temperature Falling"
        value_template: >
          {% set value = 0 %}
          {% if states('binary_sensor.dryer_temp_falling') == "on" %}
            {% set value = 1 %}
          {% endif %}
          {{ value }}
  # Monitor system performance
  - platform: systemmonitor
    resources:
      - type: memory_use_percent
      - type: disk_use_percent
      - type: swap_use_percent
      - type: load_1m
      - type: load_5m
      - type: load_15m
      - type: processor_use

binary_sensor:
  # Add calculated bed presence
  - platform: template
    sensors:
      matt_in_bed: 
        friendly_name: "Matt in Bed"
        value_template: "{{ states('sensor.matt_bed_presence') | int > 200 }}"
      julie_in_bed: 
        friendly_name: "Julie in Bed"
        value_template: "{{ states('sensor.julie_bed_presence') | int > 200 }}"
  # Add trend to aqara temp and humidity sensors
  - platform: trend
    sensors:
      master_bathroom_temp_rising_aqara:
        entity_id: sensor.master_shower_temperature
        sample_duration: 300
        max_samples: 50
        min_gradient: 0.0008
      master_bathroom_humidity_rising_aqara:
        entity_id: sensor.master_shower_humidity
        sample_duration: 300
        max_samples: 50
        min_gradient: 0.0008
      master_bathroom_temp_falling_aqara:
        entity_id: sensor.master_shower_temperature
        sample_duration: 300
        max_samples: 50
        min_gradient: -0.01
      dryer_temp_rising:
        entity_id: sensor.dryer_temperature
        sample_duration: 300
        max_samples: 50
        min_gradient: 0.01
      dryer_temp_falling:
        entity_id: sensor.dryer_temperature
        sample_duration: 300
        max_samples: 50
        min_gradient: -0.01 


# Shelly devices over MQTT
switch: !include shelly_mqtt.yaml

# Text to speech
tts:
  - platform: google_translate

# Includes
group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml
